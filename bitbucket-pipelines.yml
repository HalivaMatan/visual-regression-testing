# A sample pipeline implementation
pipelines:
  pull-requests:
    "**":
      # Other steps in the pipeline
      # ðŸ‘‡ Adds Chromatic as a step in the pipeline
      - step:
          image: node:16
          name: "Publish to Chromatic"
          # Other pipeline configuration
          script:
            - npm install
              # ðŸ‘‡ Runs Chromatic with the flag to prevent pipeline failure
            - npm run chromatic
      # - step:
      #     image: node:16
      #     name: "Publish to percy"
      #     # Other pipeline configuration
      #     script:
      #       - npm install
      #       - npm run build-storybook -- --quiet
      #       - apt-get install -y libnss3 libxss1 libasound2
      #         # ðŸ‘‡ Runs Chromatic with the flag to prevent pipeline failure
      #       - npm run percy
      #     environment:
      #       - PERCY_TOKEN=$PERCY_TOKEN
      - step:
          image: node:16
          name: "Publish to applitools"
          # Other pipeline configuration
          script:
            - npm install
              # ðŸ‘‡ Runs Chromatic with the flag to prevent pipeline failure
            - apt-get update && apt-get install -yq libgconf-2-4
            - apt-get update && apt-get install -y wget --no-install-recommends && \
              wget -q -O - https://dl-ssl.google.com/linux/linux_signing_key.pub | apt-key add -  && \
              sh -c 'echo "deb [arch=amd64] http://dl.google.com/linux/chrome/deb/ stable main" >> /etc/apt/sources.list.d/google.list' && \
              apt-get update && \
              apt-get install -y google-chrome-unstable fonts-ipafont-gothic fonts-wqy-zenhei fonts-thai-tlwg fonts-kacst ttf-freefont --no-install-recommends
              # Dont worry about cleaning up files left after installation.
            - npm run applitools
          environment:
            - APPLITOOLS_API_KEY=$APPLITOOLS_API_KEY
